# @file
# @author LKostyra (costyrra.xl@gmail.com)
# @brief  CMake for RendererVk

MESSAGE("Generating Makefile for RendererVk")

SET(NFE_RENDERERVK_DIRECTORY ${NFE_RENDERERS_DIRECTORY}/RendererVk)

FILE(GLOB NFRENDERERVK_INTERNAL_SOURCES        Internal/*.cpp)
FILE(GLOB NFRENDERERVK_INTERNAL_HEADERS        Internal/*.hpp)
FILE(GLOB NFRENDERERVK_INTERNAL_LINUX_SOURCES  Internal/Linux/*.cpp)
FILE(GLOB NFRENDERERVK_INTERNAL_LINUX_HEADERS  Internal/Linux/*.hpp)
FILE(GLOB NFRENDERERVK_API_SOURCES             API/*.cpp)
FILE(GLOB NFRENDERERVK_API_HEADERS             API/*.hpp)
FILE(GLOB NFRENDERERVK_API_LINUX_SOURCES       API/Linux/*.cpp)
FILE(GLOB NFRENDERERVK_API_LINUX_HEADERS       API/Linux/*.hpp)

# GLSLang's default resource limits definition
SET(NFRENDERERVK_GLSLANG_DEFAULT_RESOURCE_LIMITS
    ${NFEDEPS_ROOT_DIRECTORY}/glslang/StandAlone/ResourceLimits.cpp
    ${NFEDEPS_ROOT_DIRECTORY}/glslang/StandAlone/ResourceLimits.h
)

# Skips Main.cpp on purpose, because there's only Main.cpp definition for Win32
SET(NFRENDERERVK_MAIN_SOURCES PCH.cpp)
SET(NFRENDERERVK_MAIN_HEADERS PCH.hpp)

ADD_LIBRARY(RendererVk SHARED
            ${NFRENDERERVK_INTERNAL_SOURCES} ${NFRENDERERVK_INTERNAL_HEADERS}
            ${NFRENDERERVK_INTERNAL_LINUX_SOURCES} ${NFRENDERERVK_INTERNAL_LINUX_HEADERS}
            ${NFRENDERERVK_API_SOURCES} ${NFRENDERERVK_API_HEADERS}
            ${NFRENDERERVK_API_LINUX_SOURCES} ${NFRENDERERVK_API_LINUX_HEADERS}
            ${NFRENDERERVK_MAIN_SOURCES} ${NFRENDERERVK_MAIN_HEADERS}
            ${NFRENDERERVK_GLSLANG_DEFAULT_RESOURCE_LIMITS}
)

# To enable XCB-specific Vulkan extensions
TARGET_COMPILE_DEFINITIONS(RendererVk
                           PRIVATE "-DVK_USE_PLATFORM_XCB_KHR"
)

TARGET_INCLUDE_DIRECTORIES(RendererVk
                           PRIVATE ${NFE_RENDERERVK_DIRECTORY}
                           PRIVATE ${NFE_SRC_DIRECTORY}
                           PRIVATE ${NFEDEPS_ROOT_DIRECTORY}
                           PRIVATE ${VULKAN_SDK}/include
)

TARGET_LINK_DIRECTORIES(RendererVk
                        PRIVATE ${NFEDEPS_LIB_DIRECTORY}
)

TARGET_LINK_LIBRARIES(RendererVk vulkan glslang HLSL SPIRV OGLCompiler OSDependent)

TARGET_PRECOMPILE_HEADERS(RendererVk PRIVATE PCH.hpp)

ADD_CUSTOM_COMMAND(TARGET RendererVk POST_BUILD COMMAND
                   ${CMAKE_COMMAND} -E copy $<TARGET_FILE:RendererVk> ${NFE_OUTPUT_DIRECTORY}/${targetfile})

